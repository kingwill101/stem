services:
  redis:
    image: redis:7.2-alpine
    user: "0"
    ports:
      - "6379:6379"
    command:
      - redis-server
      - --appendonly
      - "yes"
      - --port
      - "0"
      - --tls-port
      - "6379"
      - --tls-cert-file
      - /certs/server.crt
      - --tls-key-file
      - /certs/server.key
      - --tls-ca-cert-file
      - /certs/ca.crt
      - --tls-auth-clients
      - "yes"
    volumes:
      - redis-data:/data
      - ./certs:/certs:ro
    restart: unless-stopped

  enqueuer:
    build:
      context: ../..
      dockerfile: examples/microservice/enqueuer/Dockerfile
      target: dev
    env_file:
      - .env.example
    environment:
      PORT: ${PORT:-8443}
      ENQUEUER_TLS_CERT: "/certs/server.crt"
      ENQUEUER_TLS_KEY: "/certs/server.key"
      ENQUEUER_TLS_CLIENT_CA: "/certs/ca.crt"
    volumes:
      - ./certs:/certs:ro
    ports:
      - "${PORT:-8443}:8443"
    depends_on:
      - redis
    restart: unless-stopped

  worker:
    build:
      context: ../..
      dockerfile: examples/microservice/worker/Dockerfile
      target: dev
    env_file:
      - .env.example
    depends_on:
      - redis
    volumes:
      - ./certs:/certs:ro
    restart: unless-stopped

  worker2:
    build:
      context: ../..
      dockerfile: examples/microservice/worker/Dockerfile
      target: dev
    env_file:
      - .env.example
    depends_on:
      - redis
    volumes:
      - ./certs:/certs:ro
    restart: unless-stopped

  worker3:
    build:
      context: ../..
      dockerfile: examples/microservice/worker/Dockerfile
      target: dev
    env_file:
      - .env.example
    depends_on:
      - redis
    volumes:
      - ./certs:/certs:ro
    restart: unless-stopped

  beat:
    build:
      context: ../..
      dockerfile: examples/microservice/beat/Dockerfile
      target: dev
    env_file:
      - .env.example
    environment:
      STEM_SCHEDULE_FILE: "/config/schedules.yaml"
    depends_on:
      - redis
    volumes:
      - ./certs:/certs:ro
      - ./schedules.example.yaml:/config/schedules.yaml:ro
    restart: unless-stopped

volumes:
  redis-data:
